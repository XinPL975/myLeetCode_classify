给定一个二叉搜索树和一个目标结果，如果 BST 中存在两个元素且它们的和等于给定的目标结果，则返回 true。

案例 1:

输入: 
    5
   / \
  3   6
 / \   \
2   4   7

Target = 9

输出: True
 

案例 2:

输入: 
    5
   / \
  3   6
 / \   \
2   4   7

Target = 28

输出: False

class Solution {
    List<Integer> list=new ArrayList<>();
    public boolean findTarget(TreeNode root, int k) {
        if(root==null) return false;                     //注意不要忘记初始情况！！
        traverse(root);
        int start=0,end=list.size()-1;
        while(start<end){
            int sum=list.get(start)+list.get(end);
            if(sum==k) return true;
            if(sum<k){
                start++;
            }else{
                end--;
            }
        }
        return false;

    }

    void traverse(TreeNode root){
        if(root==null) return;
        traverse(root.left);
        list.add(root.val);
        traverse(root.right);
    }
}
