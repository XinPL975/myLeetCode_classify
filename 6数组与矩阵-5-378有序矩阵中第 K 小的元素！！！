给你一个 n x n 矩阵 matrix ，其中每行和每列元素均按升序排序，找到矩阵中第 k 小的元素。
请注意，它是 排序后 的第 k 小元素，而不是第 k 个 不同 的元素。

示例 1：
输入：matrix = [[1,5,9],[10,11,13],[12,13,15]], k = 8
输出：13
解释：矩阵中的元素为 [1,5,9,10,11,12,13,13,15]，第 8 小元素是 13

示例 2：
输入：matrix = [[-5]], k = 1
输出：-5
 
提示：

n == matrix.length
n == matrix[i].length
1 <= n <= 300
-109 <= matrix[i][j] <= 109
题目数据 保证 matrix 中的所有行和列都按 非递减顺序 排列
1 <= k <= n2

难点：理解lessCount<k和lessCount>=两种情况下对startVal和endVal的改变！

class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        int n=matrix.length;
        int startVal=matrix[0][0],endVal=matrix[n-1][n-1];
        while(startVal<endVal){
            int midVal=startVal+(endVal-startVal)/2;
            int lessCount=0;
            for(int i=0;i<n;i++){
                for(int j=0;j<n && matrix[i][j]<=midVal;j++){    //优化关键：将matrix[i][j]<=midVal写在循环条件里 而不写在循环体中！
                   lessCount++;
                }
            }
            // 以下部分为解题关键！
            if(lessCount<k){
                startVal=midVal+1;   
            }else {
                endVal=midVal;
            }
        }
        return startVal;
    }

   
}
