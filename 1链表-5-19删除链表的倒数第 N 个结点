给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。

进阶：你能尝试使用一趟扫描实现吗？

示例 1：
输入：head = [1,2,3,4,5], n = 2
输出：[1,2,3,5]

示例 2：
输入：head = [1], n = 1
输出：[]

示例 3：
输入：head = [1,2], n = 1
输出：[1]
 
提示：
链表中结点的数目为 sz
1 <= sz <= 30
0 <= Node.val <= 100
1 <= n <= sz

解题关键：总的链表节点个数为a，倒数n个则正数a-n个  将倒数问题转化为正数问题 ！！
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode prev=new ListNode(-1);   //注意这里不能用null 因为下一行需要给prev指定其next为head
        prev.next=head;
        ListNode fast=prev,slow=prev;
        for(int i=0;i<n;i++){
            fast=fast.next;
        }
        while(fast.next!=null){
            fast=fast.next;
            slow=slow.next;
        }
        slow.next=slow.next.next;
        return prev.next;     //关键！！注意这里不要返回head 因为会出现一个节点 删除一个的情况！！
    }
}
