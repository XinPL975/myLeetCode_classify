最初在一个记事本上只有一个字符 'A'。你每次可以对这个记事本进行两种操作：

Copy All (复制全部) : 你可以复制这个记事本中的所有字符(部分的复制是不允许的)。
Paste (粘贴) : 你可以粘贴你上一次复制的字符。
给定一个数字 n 。你需要使用最少的操作次数，在记事本中打印出恰好 n 个 'A'。输出能够打印出 n 个 'A' 的最少操作次数。

示例 1:
输入: 3
输出: 3
解释:
最初, 我们只有一个字符 'A'。
第 1 步, 我们使用 Copy All 操作。
第 2 步, 我们使用 Paste 操作来获得 'AA'。
第 3 步, 我们使用 Paste 操作来获得 'AAA'。

解题关键：
1.首先初始化，n个字符最多可以通过n次操作来得到，即每次粘贴一个字符
2.对i进行因式分解，找到一个因子j即可，则 dp[i]=dp[j]+dp[i/j];  ！！！理解！
例如：12=2*6，则得到2的最小次数为dp[2]，然后将2个字符看成一个整体字符！！再加上由1个字符得到6个字符的最小次数，即dp[6]  深刻理解 ！！！

class Solution {
    public int minSteps(int n) {
        int[] dp=new int[n+1];
        int h=(int)Math.sqrt(n);        //优化关键！！因式分解只需要遍历到(int)Math.sqrt(n)即可！！
        for(int i=2;i<=n;i++){
            dp[i]=i;
        }
        for(int i=3;i<=n;i++){
            for(int j=2;j<=h;j++){
                if(i%j==0){
                    dp[i]=dp[j]+dp[i/j];
                    break;        //一旦完成因式分解，就break！！
                }
            }
        }
        return dp[n];
    }
}
