给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。

初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。你可以假设 nums1 的空间大小等于 m + n，这样它就有足够的空间保存来自 nums2 的元素。

示例 1：
输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
输出：[1,2,2,3,5,6]

示例 2：
输入：nums1 = [1], m = 1, nums2 = [], n = 0
输出：[1]
 
提示：

nums1.length == m + n
nums2.length == n
0 <= m, n <= 200
1 <= m + n <= 200
-109 <= nums1[i], nums2[i] <= 109

解题关键：要考虑两个索引分别<0时候的情况！！！（即一个数组中的所有数值已经排好序，另一个还没排完）

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int index1=m-1,index2=n-1;
        int mergeIndex=m+n-1;
        while(index1>=0 || index2>=0){        //关键一：要用或|| ！！
            if(index1<0){                     //关键二：可以先判断是否有索引已经小于0的情况
                nums1[mergeIndex--]=nums2[index2--];
            }else if(index2<0){
                nums1[mergeIndex--]=nums1[index1--];
            }else if(nums1[index1]>nums2[index2]){
                nums1[mergeIndex--]=nums1[index1--];
            }else{
                nums1[mergeIndex--]=nums2[index2--];
            }
        }
    }
}
