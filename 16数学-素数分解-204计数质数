统计所有小于非负整数 n 的质数的数量。
示例 1：
输入：n = 10
输出：4
解释：小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。

示例 2：
输入：n = 0
输出：0

示例 3：
输入：n = 1
输出：0

法一：较笨的方法（能通过）
class Solution {
    public int countPrimes(int n) {
        boolean[] notPrime=new boolean[n];    //记录遍历过的数是否是质数
        int count=0;
        for(int i=2;i<n;i++){
            if(notPrime[i]) continue;
            count++;
            for(int j=i*2;j<n;j +=i){        //对质数进行倍数扩大，质数的倍数一定不是质数！
                notPrime[j]=true;
            }

        }
        return count;
    }
}

法二：优化后的方法
class Solution {
    public int countPrimes(int n) {
        boolean[] notPrime=new boolean[n];
        int count=0;
        for(int i=2;i<n;i++){
            if(notPrime[i]) continue;
            count++;
            for(long j=(long) i*i;j<n;j +=i){       //优化关键！！让j从i*i开始，因为如果 k < i，那么 k * i 在之前就已经被去除过了
                notPrime[(int)j]=true;
            }
        }
        return count;
    }

    
}
