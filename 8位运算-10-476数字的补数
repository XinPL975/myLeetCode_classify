给你一个正整数 num ，输出它的补数。补数是对该数的二进制表示取反。

示例 1：
输入：num = 5
输出：2
解释：5 的二进制表示为 101（没有前导零位），其补数为 010。所以你需要输出 2 。

示例 2：
输入：num = 1
输出：0
解释：1 的二进制表示为 1（没有前导零位），其补数为 0。所以你需要输出 0 。
 
提示：

给定的整数 num 保证在 32 位带符号整数的范围内。
num >= 1
你可以假定二进制数不包含前导零位。
本题与 1009 https://leetcode-cn.com/problems/complement-of-base-10-integer/ 相同


解题思路：对二进制取反可以用异或 如num为101 则将101与111异或得到010  那么问题转化为如何获得111
          Integer.highestOneBit(num)这个方法可以保留二进制形式最左边的最高一位1且高位后面全部补零  例如num为101 可以得到100
          再联想到将100左移一位为1000再-1即可得到111

class Solution {
    public int findComplement(int num) {
        if(num==0) return 1;       //注意Integer.highestOneBit(num)中num不为零和负数！！虽然题目已经规定了num>=1  但养成习惯！
        int mask=(Integer.highestOneBit(num)<<1)-1;
        return num^mask;
        
    }
}
