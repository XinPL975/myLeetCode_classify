！！一题多解：其余解法见：
2树-1递归-10-111二叉树的最小深度

给定一个二叉树，找出其最小深度。

最小深度是从根节点到最近叶子节点的最短路径上的节点数量。

说明：叶子节点是指没有子节点的节点。

示例 1：
输入：root = [3,9,20,null,null,15,7]
输出：2

示例 2：
输入：root = [2,null,3,null,4,null,5,null,6]
输出：5
 
提示：

树中节点数的范围在 [0, 105] 内
-1000 <= Node.val <= 1000

class Solution {
    public int minDepth(TreeNode root) {
       Queue<TreeNode> queue=new LinkedList<>();
       if(root==null) return 0;
       queue.offer(root);
       int depth=0;
       while(!queue.isEmpty()){
           depth++;
           int size=queue.size();
           for(int i=0;i<size;i++){
               TreeNode node=queue.poll();
               if(node.left==null && node.right==null) return depth;
               if(node.left!=null) queue.offer(node.left);
               if(node.right!=null) queue.offer(node.right);
           }
       }
       return depth;
         
    }
}
