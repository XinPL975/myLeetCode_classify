给定一个字符串和一个字符串字典，找到字典里面最长的字符串，该字符串可以通过删除给定字符串的某些字符来得到。如果答案不止一个，返回长度最长且字典顺序最小的字符串。如果答案不存在，则返回空字符串。

示例 1:
输入:
s = "abpcplea", d = ["ale","apple","monkey","plea"]
输出: 
"apple"

示例 2:
输入:
s = "abpcplea", d = ["a","b","c"]
输出: 
"a"

说明:

所有输入的字符串只包含小写字母。
字典的大小不会超过 1000。
所有输入的字符串长度不会超过 1000。


关键细节：如果答案不止一个，返回长度最长且<字典顺序最小>的字符串  --> 字典顺序最小 要用到String类的compareTo()方法 默认是字典顺序排序！

class Solution {
    public String findLongestWord(String s, List<String> dictionary) {
        if(s==null || dictionary.size()==0) return "";
        int maxLength=0;
        String res="";
        for(String str:dictionary){
            if(maxLength>str.length() || (maxLength==str.length() && res.compareTo(str)<0)) continue;
            if(isSubString(s, str)){
                maxLength=str.length();
                res=str;
            }
        }
        return res;

    }

    //判断t是否是s的子字符串
    public boolean isSubString(String s,String t){
        if(s==null || t==null) return false;
        int i=0,j=0;
        while(i<s.length() && j<t.length()){
            if(s.charAt(i)==t.charAt(j)) j++;
            i++;
        }
        return j==t.length();
    }
}
