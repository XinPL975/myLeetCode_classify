给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

示例 1：
输入：nums = [-2,1,-3,4,-1,2,1,-5,4]
输出：6
解释：连续子数组 [4,-1,2,1] 的和最大，为 6 。

示例 2：
输入：nums = [1]
输出：1

示例 3：
输入：nums = [0]
输出：0

示例 4：
输入：nums = [-1]
输出：-1

示例 5：
输入：nums = [-100000]
输出：-100000
 
提示：

1 <= nums.length <= 3 * 104
-105 <= nums[i] <= 105

class Solution {
    public int maxSubArray(int[] nums) {
        if(nums.length==1) return nums[0];
        int currSum=nums[0];
        int maxSum=nums[0];
        for(int i=1;i<nums.length;i++){
           currSum=Math.max(currSum+nums[i],nums[i]);   //关键步骤！比较当前和，决定是要累加结果作为currSum还是当前值nums[i]作为currSum
           maxSum=Math.max(maxSum,currSum);     //比较最大和
        }
        return maxSum;
    }
}
