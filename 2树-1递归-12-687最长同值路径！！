给定一个二叉树，找到最长的路径，这个路径中的每个节点具有相同值。 这条路径可以经过也可以不经过根节点。

注意：两个节点之间的路径长度由它们之间的边数表示。

示例 1:
输入:

              5
             / \
            4   5
           / \   \
          1   1   5
输出:
2

示例 2:
输入:

              1
             / \
            4   5
           / \   \
          4   4   5
输出:
2

注意: 给定的二叉树不超过10000个结点。 树的高度不超过1000。

class Solution {
    int res=0;
    public int longestUnivaluePath(TreeNode root) {
        longestUnivaluePathWithRoot(root);
        return res;
    }

    int longestUnivaluePathWithRoot(TreeNode root){    //从根节点开始的最长同值路径  注意:不是经过根节点，而是从根节点开始！
        if(root==null) return 0;
        int left=longestUnivaluePathWithRoot(root.left);
        int right=longestUnivaluePathWithRoot(root.right);
        left=(root.left!=null && root.left.val==root.val)?left+1:0;
        right=(root.right!=null && root.right.val==root.val)?right+1:0;
        res=Math.max(res,left+right);
        return Math.max(left,right);

         
    }
}
