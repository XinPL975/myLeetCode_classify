实现 int sqrt(int x) 函数。

计算并返回 x 的平方根，其中 x 是非负整数。

由于返回类型是整数，结果只保留整数的部分，小数部分将被舍去。

示例 1:
输入: 4
输出: 2

示例 2:
输入: 8
输出: 2
说明: 8 的平方根是 2.82842..., 
     由于返回类型是整数，小数部分将被舍去。

法一：平方的方法 考虑到溢出 用long型保存变量！
class Solution {
    public int mySqrt(int x) {
        if(x<=1) return x;
        long left=1,right=x/2;
        while(left<=right){
            long mid=left+(right-left)/2;
            long pow1=mid*mid;
            long pow2=(mid+1)*(mid+1);
            if(pow1<=x && x<pow2) return (int)mid;
            else if(x<pow1) right=mid-1;
            else left=mid+1;
        }
        return -1;
    }
}

法二：相除的方法 不需要考虑溢出的问题
但是要注意：
对于 x = 8，它的开方是 2.82842...，最后应该返回 2 而不是 3。
在循环条件为 left <= right 并且循环退出时，right 总是比 left 小 1，也就是说 right = 2，left = 3，因此最后的返回值应该为 right 

class Solution {
    public int mySqrt(int x) {
        if(x<=1) return x;
        int left=1,right=x/2;
        while(left<=right){
            int mid=left+(right-left)/2;
            int num=x/mid;
            if(num==mid) return mid;
            else if(num>mid) left=mid+1;
            else right=mid-1;
        }
        return right;   //关键！！
    }
}
