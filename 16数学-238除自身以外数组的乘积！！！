给你一个长度为 n 的整数数组 nums，其中 n > 1，返回输出数组 output ，其中 output[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积。
示例:
输入: [1,2,3,4]
输出: [24,12,8,6]
 
提示：题目数据保证数组之中任意元素的全部前缀元素和后缀（甚至是整个数组）的乘积都在 32 位整数范围内。

说明: 请不要使用除法，且在 O(n) 时间复杂度内完成此题。

进阶：
你可以在常数空间复杂度内完成这个题目吗？（ 出于对空间复杂度分析的目的，输出数组不被视为额外空间。）

解题思路：
先从左往右扫描一次，计算每个元素左边元素的乘积
再从右往左扫描一次，计算每个元素右边元素的乘积，并累乘
关键：分别用left和right两个变量记录左边元素和右边元素累计的乘积！！妙啊！！！

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n=nums.length;
        int[] newNums=new int[n];
        Arrays.fill(newNums, 1);
        int left=1;   //关键！！
        for(int i=1;i<n;i++){
            left *=nums[i-1];
            newNums[i] *=left;
        }
        int right=1;   //关键！！
        for(int i=n-2;i>=0;i--){
            right *=nums[i+1];
            newNums[i] *=right;
        }
        return newNums;
    }
}
