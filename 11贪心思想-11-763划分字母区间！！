字符串 S 由小写字母组成。我们要把这个字符串划分为尽可能多的片段，同一字母最多出现在一个片段中。返回一个表示每个字符串片段的长度的列表。

示例：
输入：S = "ababcbacadefegdehijhklij"
输出：[9,7,8]
解释：
划分结果为 "ababcbaca", "defegde", "hijhklij"。
每个字母最多出现在一个片段中。
像 "ababcbacadefegde", "hijhklij" 的划分是错误的，因为划分的片段数较少。
 
提示：
S的长度在[1, 500]之间。
S只包含小写字母 'a' 到 'z' 。

解题细节：
1.用数组（大小26）来保存字符串中每个字母出现的最后一个索引位置 比用HashMap的时间消耗大大降低！
2.循环条件startIndex<S.length()来控制循环结束  且将endIndex赋值endIndex=lastIndex[S.charAt(startIndex)-'a']移到循环开头！可以避免空指针异常！！
class Solution {
    public List<Integer> partitionLabels(String S) {
        int[] lastIndex=new int[26];
        for(int i=0;i<S.length();i++){
            lastIndex[S.charAt(i)-'a']=i;
        }
        int startIndex=0;
        List<Integer> res=new ArrayList<>();
        while(startIndex<S.length()){
            int endIndex=lastIndex[S.charAt(startIndex)-'a'];
            for(int i=startIndex+1;i<=endIndex;i++){
                int index=lastIndex[S.charAt(i)-'a'];
                if(index>endIndex) endIndex=index;
            }
            res.add(endIndex-startIndex+1);
            startIndex=endIndex+1;
        }
        return res;
    }
}
