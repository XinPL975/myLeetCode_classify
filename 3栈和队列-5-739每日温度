请根据每日 气温 列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用 0 来代替。

例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。

提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。

class Solution {
    public int[] dailyTemperatures(int[] T) {
        int[] res=new int[T.length];
        Stack<Integer> stack=new Stack<>();
        int topIndex;
        for(int i=0;i<T.length;i++){
            while(!stack.isEmpty() && T[i]>T[stack.peek()]){
                topIndex=stack.pop();            //这一句也是减少时间消耗的关键，在tack.pop()的同时保存其Index，就不需要重复使用peek()和pop()！！
                res[topIndex]=i-topIndex;
            }
            stack.push(i);    //注意！这句  stack.push(i);  不管是否满足while内的条件都会执行（因为每一天的温度都需要判断）所以直接放在最后  不需要额外写if else语句 减少时间消耗
            
        }
        return res;
    }
}
